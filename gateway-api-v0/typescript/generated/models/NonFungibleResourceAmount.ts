/* tslint:disable */
/* eslint-disable */
/**
 * Babylon Alphanet v0 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NonFungibleResourceAmountAllOf } from './NonFungibleResourceAmountAllOf';
import {
    NonFungibleResourceAmountAllOfFromJSON,
    NonFungibleResourceAmountAllOfFromJSONTyped,
    NonFungibleResourceAmountAllOfToJSON,
} from './NonFungibleResourceAmountAllOf';
import type { ResourceAmountBase } from './ResourceAmountBase';
import {
    ResourceAmountBaseFromJSON,
    ResourceAmountBaseFromJSONTyped,
    ResourceAmountBaseToJSON,
} from './ResourceAmountBase';
import type { ResourceType } from './ResourceType';
import {
    ResourceTypeFromJSON,
    ResourceTypeFromJSONTyped,
    ResourceTypeToJSON,
} from './ResourceType';

/**
 * 
 * @export
 * @interface NonFungibleResourceAmount
 */
export interface NonFungibleResourceAmount {
    /**
     * 
     * @type {ResourceType}
     * @memberof NonFungibleResourceAmount
     */
    resourceType: ResourceType;
    /**
     * The Bech32m-encoded human readable version of the resource address
     * @type {string}
     * @memberof NonFungibleResourceAmount
     */
    resourceAddress: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof NonFungibleResourceAmount
     */
    nfIdsHex: Array<string>;
}

/**
 * Check if a given object implements the NonFungibleResourceAmount interface.
 */
export function instanceOfNonFungibleResourceAmount(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "resourceType" in value;
    isInstance = isInstance && "resourceAddress" in value;
    isInstance = isInstance && "nfIdsHex" in value;

    return isInstance;
}

export function NonFungibleResourceAmountFromJSON(json: any): NonFungibleResourceAmount {
    return NonFungibleResourceAmountFromJSONTyped(json, false);
}

export function NonFungibleResourceAmountFromJSONTyped(json: any, ignoreDiscriminator: boolean): NonFungibleResourceAmount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'resourceType': ResourceTypeFromJSON(json['resource_type']),
        'resourceAddress': json['resource_address'],
        'nfIdsHex': json['nf_ids_hex'],
    };
}

export function NonFungibleResourceAmountToJSON(value?: NonFungibleResourceAmount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'resource_type': ResourceTypeToJSON(value.resourceType),
        'resource_address': value.resourceAddress,
        'nf_ids_hex': value.nfIdsHex,
    };
}

