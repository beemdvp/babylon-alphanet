/* tslint:disable */
/* eslint-disable */
/**
 * Babylon Alphanet v0 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V0TransactionPayloadStatus
 */
export interface V0TransactionPayloadStatus {
    /**
     * 
     * @type {string}
     * @memberof V0TransactionPayloadStatus
     */
    payloadHash: string;
    /**
     * The status of the transaction payload, as per this node
     * @type {string}
     * @memberof V0TransactionPayloadStatus
     */
    status: V0TransactionPayloadStatusStatusEnum;
    /**
     * An explanation for the error, if failed or rejected
     * @type {string}
     * @memberof V0TransactionPayloadStatus
     */
    errorMessage?: string;
}


/**
 * @export
 */
export const V0TransactionPayloadStatusStatusEnum = {
    CommittedSuccess: 'CommittedSuccess',
    CommittedFailure: 'CommittedFailure',
    InMempool: 'InMempool',
    Rejected: 'Rejected'
} as const;
export type V0TransactionPayloadStatusStatusEnum = typeof V0TransactionPayloadStatusStatusEnum[keyof typeof V0TransactionPayloadStatusStatusEnum];


/**
 * Check if a given object implements the V0TransactionPayloadStatus interface.
 */
export function instanceOfV0TransactionPayloadStatus(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "payloadHash" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function V0TransactionPayloadStatusFromJSON(json: any): V0TransactionPayloadStatus {
    return V0TransactionPayloadStatusFromJSONTyped(json, false);
}

export function V0TransactionPayloadStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V0TransactionPayloadStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'payloadHash': json['payload_hash'],
        'status': json['status'],
        'errorMessage': !exists(json, 'error_message') ? undefined : json['error_message'],
    };
}

export function V0TransactionPayloadStatusToJSON(value?: V0TransactionPayloadStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'payload_hash': value.payloadHash,
        'status': value.status,
        'error_message': value.errorMessage,
    };
}

