/* tslint:disable */
/* eslint-disable */
/**
 * Babylon Alphanet v0 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PublicKeyType } from './PublicKeyType';
import {
    PublicKeyTypeFromJSON,
    PublicKeyTypeFromJSONTyped,
    PublicKeyTypeToJSON,
} from './PublicKeyType';

/**
 * 
 * @export
 * @interface EcdsaSecp256k1PublicKey
 */
export interface EcdsaSecp256k1PublicKey {
    /**
     * 
     * @type {PublicKeyType}
     * @memberof EcdsaSecp256k1PublicKey
     */
    keyType: PublicKeyType;
    /**
     * The hex-encoded compressed ECDSA Secp256k1 public key (33 bytes)
     * @type {string}
     * @memberof EcdsaSecp256k1PublicKey
     */
    keyHex: string;
}

/**
 * Check if a given object implements the EcdsaSecp256k1PublicKey interface.
 */
export function instanceOfEcdsaSecp256k1PublicKey(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "keyType" in value;
    isInstance = isInstance && "keyHex" in value;

    return isInstance;
}

export function EcdsaSecp256k1PublicKeyFromJSON(json: any): EcdsaSecp256k1PublicKey {
    return EcdsaSecp256k1PublicKeyFromJSONTyped(json, false);
}

export function EcdsaSecp256k1PublicKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): EcdsaSecp256k1PublicKey {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'keyType': PublicKeyTypeFromJSON(json['key_type']),
        'keyHex': json['key_hex'],
    };
}

export function EcdsaSecp256k1PublicKeyToJSON(value?: EcdsaSecp256k1PublicKey | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'key_type': PublicKeyTypeToJSON(value.keyType),
        'key_hex': value.keyHex,
    };
}

