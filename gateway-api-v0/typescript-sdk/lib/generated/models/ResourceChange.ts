/* tslint:disable */
/* eslint-disable */
/**
 * Babylon Alphanet v0 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EntityId } from './EntityId';
import {
    EntityIdFromJSON,
    EntityIdFromJSONTyped,
    EntityIdToJSON,
} from './EntityId';

/**
 * 
 * @export
 * @interface ResourceChange
 */
export interface ResourceChange {
    /**
     * The Bech32m-encoded human readable version of the resource address
     * @type {string}
     * @memberof ResourceChange
     */
    resource_address: string;
    /**
     * The Bech32m-encoded human readable version of the component address
     * @type {string}
     * @memberof ResourceChange
     */
    component_address: string;
    /**
     * 
     * @type {EntityId}
     * @memberof ResourceChange
     */
    vault_entity_id: EntityId;
    /**
     * A decimal-string-encoded integer between 0 and 2^255-1, which represents the total number of 10^(-18) subunits in
     * the XRD amount put or taken from the vault
     * @type {string}
     * @memberof ResourceChange
     */
    amount_attos: string;
}

/**
 * Check if a given object implements the ResourceChange interface.
 */
export function instanceOfResourceChange(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "resource_address" in value;
    isInstance = isInstance && "component_address" in value;
    isInstance = isInstance && "vault_entity_id" in value;
    isInstance = isInstance && "amount_attos" in value;

    return isInstance;
}

export function ResourceChangeFromJSON(json: any): ResourceChange {
    return ResourceChangeFromJSONTyped(json, false);
}

export function ResourceChangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourceChange {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'resource_address': json['resource_address'],
        'component_address': json['component_address'],
        'vault_entity_id': EntityIdFromJSON(json['vault_entity_id']),
        'amount_attos': json['amount_attos'],
    };
}

export function ResourceChangeToJSON(value?: ResourceChange | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'resource_address': value.resource_address,
        'component_address': value.component_address,
        'vault_entity_id': EntityIdToJSON(value.vault_entity_id),
        'amount_attos': value.amount_attos,
    };
}

