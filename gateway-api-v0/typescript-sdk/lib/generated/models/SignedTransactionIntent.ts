/* tslint:disable */
/* eslint-disable */
/**
 * Babylon Alphanet v0 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SignatureWithPublicKey } from './SignatureWithPublicKey';
import {
    SignatureWithPublicKeyFromJSON,
    SignatureWithPublicKeyFromJSONTyped,
    SignatureWithPublicKeyToJSON,
} from './SignatureWithPublicKey';
import type { TransactionIntent } from './TransactionIntent';
import {
    TransactionIntentFromJSON,
    TransactionIntentFromJSONTyped,
    TransactionIntentToJSON,
} from './TransactionIntent';

/**
 * 
 * @export
 * @interface SignedTransactionIntent
 */
export interface SignedTransactionIntent {
    /**
     * The hex-encoded double-SHA256 hash of the signed transaction intent. Also known as the signatures hash.
     * @type {string}
     * @memberof SignedTransactionIntent
     */
    hash: string;
    /**
     * 
     * @type {TransactionIntent}
     * @memberof SignedTransactionIntent
     */
    intent: TransactionIntent;
    /**
     * 
     * @type {Array<SignatureWithPublicKey>}
     * @memberof SignedTransactionIntent
     */
    intent_signatures: Array<SignatureWithPublicKey>;
}

/**
 * Check if a given object implements the SignedTransactionIntent interface.
 */
export function instanceOfSignedTransactionIntent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "hash" in value;
    isInstance = isInstance && "intent" in value;
    isInstance = isInstance && "intent_signatures" in value;

    return isInstance;
}

export function SignedTransactionIntentFromJSON(json: any): SignedTransactionIntent {
    return SignedTransactionIntentFromJSONTyped(json, false);
}

export function SignedTransactionIntentFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignedTransactionIntent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hash': json['hash'],
        'intent': TransactionIntentFromJSON(json['intent']),
        'intent_signatures': ((json['intent_signatures'] as Array<any>).map(SignatureWithPublicKeyFromJSON)),
    };
}

export function SignedTransactionIntentToJSON(value?: SignedTransactionIntent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hash': value.hash,
        'intent': TransactionIntentToJSON(value.intent),
        'intent_signatures': ((value.intent_signatures as Array<any>).map(SignatureWithPublicKeyToJSON)),
    };
}

