/* tslint:disable */
/* eslint-disable */
/**
 * Babylon Alphanet v0 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommittedTransaction } from './CommittedTransaction';
import {
    CommittedTransactionFromJSON,
    CommittedTransactionFromJSONTyped,
    CommittedTransactionToJSON,
} from './CommittedTransaction';

/**
 * 
 * @export
 * @interface V0CommittedTransactionResponse
 */
export interface V0CommittedTransactionResponse {
    /**
     * 
     * @type {CommittedTransaction}
     * @memberof V0CommittedTransactionResponse
     */
    committed: CommittedTransaction;
}

/**
 * Check if a given object implements the V0CommittedTransactionResponse interface.
 */
export function instanceOfV0CommittedTransactionResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "committed" in value;

    return isInstance;
}

export function V0CommittedTransactionResponseFromJSON(json: any): V0CommittedTransactionResponse {
    return V0CommittedTransactionResponseFromJSONTyped(json, false);
}

export function V0CommittedTransactionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V0CommittedTransactionResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'committed': CommittedTransactionFromJSON(json['committed']),
    };
}

export function V0CommittedTransactionResponseToJSON(value?: V0CommittedTransactionResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'committed': CommittedTransactionToJSON(value.committed),
    };
}

