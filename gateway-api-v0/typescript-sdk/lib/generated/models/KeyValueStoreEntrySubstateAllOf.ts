/* tslint:disable */
/* eslint-disable */
/**
 * Babylon Alphanet v0 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DataStruct } from './DataStruct';
import {
    DataStructFromJSON,
    DataStructFromJSONTyped,
    DataStructToJSON,
} from './DataStruct';

/**
 * 
 * @export
 * @interface KeyValueStoreEntrySubstateAllOf
 */
export interface KeyValueStoreEntrySubstateAllOf {
    /**
     * The hex-encoded bytes of its key
     * @type {string}
     * @memberof KeyValueStoreEntrySubstateAllOf
     */
    key_hex: string;
    /**
     * 
     * @type {boolean}
     * @memberof KeyValueStoreEntrySubstateAllOf
     */
    is_deleted: boolean;
    /**
     * 
     * @type {DataStruct}
     * @memberof KeyValueStoreEntrySubstateAllOf
     */
    data_struct?: DataStruct;
}

/**
 * Check if a given object implements the KeyValueStoreEntrySubstateAllOf interface.
 */
export function instanceOfKeyValueStoreEntrySubstateAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "key_hex" in value;
    isInstance = isInstance && "is_deleted" in value;

    return isInstance;
}

export function KeyValueStoreEntrySubstateAllOfFromJSON(json: any): KeyValueStoreEntrySubstateAllOf {
    return KeyValueStoreEntrySubstateAllOfFromJSONTyped(json, false);
}

export function KeyValueStoreEntrySubstateAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeyValueStoreEntrySubstateAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'key_hex': json['key_hex'],
        'is_deleted': json['is_deleted'],
        'data_struct': !exists(json, 'data_struct') ? undefined : DataStructFromJSON(json['data_struct']),
    };
}

export function KeyValueStoreEntrySubstateAllOfToJSON(value?: KeyValueStoreEntrySubstateAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'key_hex': value.key_hex,
        'is_deleted': value.is_deleted,
        'data_struct': DataStructToJSON(value.data_struct),
    };
}

