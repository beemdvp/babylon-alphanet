/* tslint:disable */
/* eslint-disable */
/**
 * Babylon Alphanet v0 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TransactionHeader } from './TransactionHeader';
import {
    TransactionHeaderFromJSON,
    TransactionHeaderFromJSONTyped,
    TransactionHeaderToJSON,
} from './TransactionHeader';

/**
 * 
 * @export
 * @interface TransactionIntent
 */
export interface TransactionIntent {
    /**
     * The hex-encoded double-SHA256 hash of the transaction intent.
     * Also known as the Transaction ID, Transaction Hash, or Intent Hash.
     * @type {string}
     * @memberof TransactionIntent
     */
    hash: string;
    /**
     * 
     * @type {TransactionHeader}
     * @memberof TransactionIntent
     */
    header: TransactionHeader;
    /**
     * The decompiled transaction manifest
     * @type {string}
     * @memberof TransactionIntent
     */
    manifest: string;
    /**
     * A map of the hex-encoded blob hash, to hex-encoded blob content
     * @type {{ [key: string]: string; }}
     * @memberof TransactionIntent
     */
    blobs_hex: { [key: string]: string; };
}

/**
 * Check if a given object implements the TransactionIntent interface.
 */
export function instanceOfTransactionIntent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "hash" in value;
    isInstance = isInstance && "header" in value;
    isInstance = isInstance && "manifest" in value;
    isInstance = isInstance && "blobs_hex" in value;

    return isInstance;
}

export function TransactionIntentFromJSON(json: any): TransactionIntent {
    return TransactionIntentFromJSONTyped(json, false);
}

export function TransactionIntentFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionIntent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hash': json['hash'],
        'header': TransactionHeaderFromJSON(json['header']),
        'manifest': json['manifest'],
        'blobs_hex': json['blobs_hex'],
    };
}

export function TransactionIntentToJSON(value?: TransactionIntent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hash': value.hash,
        'header': TransactionHeaderToJSON(value.header),
        'manifest': value.manifest,
        'blobs_hex': value.blobs_hex,
    };
}

